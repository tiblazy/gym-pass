{
  "openapi": "3.0.1",
  "info": {
    "title": "Node API with fastify - SOLID",
    "description": "A api developed to manage gym access",
    "termsOfService": "in progress",
    "contact": {
      "name": "Tiburcio Martins",
      "email": "tiburciofmartins@gmail.com"
    },
    "version": "0.1"
  },
  "externalDocs": {
    "description": "Project REPO",
    "url": "https://github.com/tiblazy/gym-pass"
  },
  "servers": [
    {
      "description": "Production Service",
      "url": "https://gym-pass-k7li.onrender.com"
    },
    {
      "description": "Development Service",
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Documentation",
      "description": "Routes"
    },
    {
      "name": "Members",
      "description": "Routes"
    },
    {
      "name": "Gyms",
      "description": "Routes"
    },
    {
      "name": "Check ins",
      "description": "Routes"
    }
  ],
  "paths": {
    "/docs": {
      "get": {
        "tags": [
          "Documentation"
        ],
        "summary": "OPENAPI docs",
        "description": "OPENAPI docs Swagger UI",
        "responses": {
          "200": {
            "description": "API docomentation fetched successfully",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/member": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "New member",
        "description": "Create a new member",
        "requestBody": {
          "description": "Insert a new member in database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member created successfully"
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "409": {
            "description": "E-mail already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/error"
                }
              }
            }
          }
        }
      }
    },
    "/members": {
      "post": {
        "tags": [
          "Members"
        ],
        "summary": "Fetch members",
        "description": "List members currently in database",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fetch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fetched members successfully"
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "Authenticate"
        ],
        "sumamry": "Authorize",
        "description": "Validate and authorize a member session",
        "requestBody": {
          "description": "Validate and authorize a member session",
          "required": true,
          "content": {
            "application/json": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "Member email",
                  "type": "string",
                  "format": "email",
                  "uniqueItems": true
                },
                "password": {
                  "description": "Member password",
                  "type": "string",
                  "format": "password"
                }
              },
              "required": [
                "email",
                "password"
              ],
              "example": {
                "email": "example@email.com",
                "password": "example"
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Authentication successful",
          "headers": {
            "Set-Cookie": {
              "description": "refresh-token cookie",
              "schema": {
                "type": "string",
                "example": "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc19hY3RpdmUiOmZhbHNlLCJzdWIiOiJjOTU1YzA1NS1mYTk4LTQ1OGYtYjI0YS1kMGViY2E0ZTJjNjYiLCJpYXQiOjE2ODUxMjU4NzEsImV4cCI6MTY4NTczMDY3MX0.iRN2DlTiOtuOXa3lsKEV9-KT816PaKBANBJuMbJXwls"
              }
            }
          },
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "JWT token",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc19hY3RpdmUiOmZhbHNlLCJzdWIiOiJjOTU1YzA1NS1mYTk4LTQ1OGYtYjI0YS1kMGViY2E0ZTJjNjYiLCJpYXQiOjE2ODUxMjU4NzEsImV4cCI6MTY4NTczMDY3MX0.iRN2DlTiOtuOXa3lsKEV9-KT816PaKBANBJuMbJXwls"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Invalid Credentials || Validation Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/responses/errors"
              }
            }
          }
        }
      }
    },
    "/token/refresh": {
      "patch": {
        "tags": [
          "Members"
        ],
        "summary": "Refresh a authenticate session",
        "description": "Refresh JWT member token with cookies",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "headers": {
              "Set-Cookie": {
                "description": "Refresh Token cookie",
                "schema": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc19hY3RpdmUiOmZhbHNlLCJzdWIiOiJjOTU1YzA1NS1mYTk4LTQ1OGYtYjI0YS1kMGViY2E0ZTJjNjYiLCJpYXQiOjE2ODUxMjU4NzEsImV4cCI6MTY4NTczMDY3MX0.iRN2DlTiOtuOXa3lsKEV9-KT816PaKBANBJuMbJXwls"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT token",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc19hY3RpdmUiOmZhbHNlLCJzdWIiOiJjOTU1YzA1NS1mYTk4LTQ1OGYtYjI0YS1kMGViY2E0ZTJjNjYiLCJpYXQiOjE2ODUxMjU4NzEsImV4cCI6MTY4NTczMDY3MX0.iRN2DlTiOtuOXa3lsKEV9-KT816PaKBANBJuMbJXwls"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/errors"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "Members"
        ],
        "summary": "Member profile",
        "description": "Get a member profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile successfull get",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "member": {
                      "type": "string",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "member id",
                          "example": "3124cd5a-80f5-420f-b49e-5850fb1bb53c"
                        },
                        "username": {
                          "type": "string",
                          "description": "member username",
                          "example": "example"
                        },
                        "email": {
                          "type": "string",
                          "description": "member email",
                          "example": "example@email.com"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "member creation date",
                          "example": "2023-05-26T12:33:08.970Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "member update date",
                          "example": "2023-05-26T12:33:08.970Z"
                        },
                        "role": {
                          "type": "string",
                          "description": "member access level",
                          "example": "MEMBER"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Members"
        ],
        "summary": "Member profile",
        "description": "Update a member profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Update a member in database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile successfull update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "member": {
                      "type": "string",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "member id",
                          "example": "3124cd5a-80f5-420f-b49e-5850fb1bb53c"
                        },
                        "username": {
                          "type": "string",
                          "description": "member username",
                          "example": "example"
                        },
                        "email": {
                          "type": "string",
                          "description": "member email",
                          "example": "example@email.com"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "member creation date",
                          "example": "2023-05-26T12:33:08.970Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "member update date",
                          "example": "2023-05-26T12:33:08.970Z"
                        },
                        "role": {
                          "type": "string",
                          "description": "member access level",
                          "example": "MEMBER"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/avatar": {
      "patch": {
        "tags": [
          "Members"
        ],
        "summary": "Member profile",
        "description": "Update a member avatar",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Update a member avatar in database",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/avatar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar successfull update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "member": {
                      "type": "string",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "member id",
                          "example": "3124cd5a-80f5-420f-b49e-5850fb1bb53c"
                        },
                        "username": {
                          "type": "string",
                          "description": "member username",
                          "example": "example"
                        },
                        "email": {
                          "type": "string",
                          "description": "member email",
                          "example": "example@email.com"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "member creation date",
                          "example": "2023-05-26T12:33:08.970Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "member update date",
                          "example": "2023-05-26T12:33:08.970Z"
                        },
                        "role": {
                          "type": "string",
                          "description": "member access level",
                          "example": "MEMBER"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/errors"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "string",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "register": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "member username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "uniqueItems": true,
            "description": "member email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "member password encrypted"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ],
        "example": {
          "username": "example",
          "email": "example@email.com",
          "password": "example"
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "error example"
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation Error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "InvalidCredentials": {
        "description": "Invalid Credentials.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/responses/error"
            }
          }
        }
      }
    }
  }
}